name: Deploy to GitHub Pages

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Generate GitHub Token
        id: generate-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
          
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ steps.generate-token.outputs.token }}
          submodules: 'recursive'
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: 'latest'
          extended: true

      - name: Build
        run: hugo --minify

      - name: Deploy
        run: |
          # Navigate to the public directory (submodule)
          cd public || exit 1

          REPO_NAME=$(gh repo view --json nameWithOwner -q ".nameWithOwner")
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # Configure git to use PAT
          git remote set-url origin "https://x-access-token:${GH_TOKEN}@github.com/${REPO_NAME}.git"

          # Create a new branch name with timestamp
          RELEASE_BRANCH="release/$(date +%Y%m%d-%H%M%S)"
          
          # Make sure we're on the default branch first
          git checkout master
          git pull origin master
          
          # Create a new branch for this release
          git checkout -b $RELEASE_BRANCH
          
          # Add changes
          git add .
          
          # Commit changes
          git commit -m "Deploy: $(date)" || echo "No changes to commit"
          
          # Push the branch
          git push origin $RELEASE_BRANCH
          
          # Create a pull request using GitHub CLI
          gh pr create \
            --title "Deploy: $(date)" \
            --body "Automated deployment via GitHub Actions" \
            --base master \
            --head $RELEASE_BRANCH \
            --repo "$REPO_NAME"
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
